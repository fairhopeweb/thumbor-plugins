
name: Release packages

on:
  # workflow_run:
  #   workflows: ["Run tests"]
  #   branches: [master]
  #   types:
  #     - completed
  push:
  pull_request:
    types: [opened, reopened]

jobs:
  list_packages:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        run: echo "::set-output name=matrix::$(find thumbor_plugins -type f -name 'setup.py' | awk -F\/ '{print $2"/"$3}' | jq -Rsc '. / "\n" - [""]')"
  release:
    name: ${{ matrix.package }}
    runs-on: ubuntu-latest
    needs: list_packages
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    strategy:
      matrix:
        package: ${{fromJSON(needs.list_packages.outputs.matrix)}}
    defaults:
      run:
        working-directory: ./thumbor_plugins/${{ matrix.package }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Prepare build environment
        run: |
          pip install -U pip
          pip install -U build
          echo "PACKAGE_NAME=$(python setup.py --name)" >> $GITHUB_ENV
          echo "PACKAGE_VERSION=$(python setup.py --version)" >> $GITHUB_ENV
          echo "TAG_NAME=$(python setup.py --fullname)" >> $GITHUB_ENV
      - name: Check if version already exists
        id: exist
        run: |
          set -o pipefail
          echo "::set-output name=result::$(pip index versions $PACKAGE_NAME | grep $PACKAGE_VERSION >> /dev/null; echo $?)"
      - name: Get previous tag
        id: previous_tag
        uses: SOLIDSoftworks/semver-tags@1.0.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
          tag-prefix: "${{ env.PACKAGE_NAME }}-"
          default-version: '0.0.1'
          prerelease: 'alpha'
      - run: |
          echo "${{ steps.previous_tag.outputs }}"
          echo "${{ steps.previous_tag.outputs.previous-version }}"
      - name: Build package
        if: ${{ !steps.exist.outputs.result }}
        run: python -m build
      - name: Publish a Python distribution to PyPI
        if: ${{ !steps.exist.outputs.result }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: thumbor_plugins/${{ matrix.package }}/dist
